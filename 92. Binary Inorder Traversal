/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> inorderTraversal(TreeNode root) {
        List<Integer> list = new ArrayList<>();
        binary_inorder(root, list);
        return list;
    }

         private void binary_inorder(TreeNode tptr, List<Integer> list)
         {
            if(tptr==null)
            {
                return;
            }
            binary_inorder(tptr.left,list);
            list.add(tptr.val);
            binary_inorder(tptr.right,list);
         }
          
             
            
         

        
    }
