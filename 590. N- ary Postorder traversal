/*
// Definition for a Node.
class Node {
    public int val;
    public List<Node> children;

    public Node() {}

    public Node(int _val) {
        val = _val;
    }

    public Node(int _val, List<Node> _children) {
        val = _val;
        children = _children;
    }
}
*/
class Solution {
    public List<Integer> postorder(Node root) {
        List<Integer> list = new ArrayList<>();
        postorder_display(root, list);
        return list; // Return the result
    }

    public void postorder_display(Node tptr, List<Integer> list) {
        if (tptr == null) return; // Base condition to stop recursion

        // Add current node value to list

        for (int ind = 0; ind < tptr.children.size(); ind++) {
            postorder_display(tptr.children.get(ind), list); // Recursive call
        }
        list.add(tptr.val); 
    }
}
